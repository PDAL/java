name: CI

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['master']
    tags: [v*]
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    # needs: [linux, macos]
    container:
      image: daunnc/pdal-ubuntu:2.3.0
    # if: github.event_name != 'pull_request'
    env: 
      PDAL_DEPEND_ON_NATIVE: "false"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6

      - name: Build Linux native package
        run: |
          ./sbt native/package && \
          VERSION=`./sbt -no-colors 'native/version' | tac | grep -m 1 '[^[:blank:]]' | cut -d ' ' -f2` && \
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # - uses: actions/download-artifact@v2
        # with:
          # name: macos
          # path: native/target

      - name: Merge native jars
        shell: bash
        run: |
          cd native/target && \
          mkdir tmp && \
          LINUX_JAR_NAME=(*x86_64-linux*.jar) && \
          (cd tmp && unzip -uo ../$LINUX_JAR_NAME) && \
          jar -cvf pdal-native-${{ env.VERSION }} -C tmp . && \
          rm -r tmp

      - name: Release
        run: |
          ./sbt "project core" ci-release && \
          ./sbt "project core-scala" ci-release && \
          ./sbt "project native" ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        if: ${{ env.SONATYPE_PASSWORD != '' && env.SONATYPE_USERNAME != '' }}
