name: CI

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['master']
    tags: [v*]
  release:
    types: [published]

jobs:
  linux:
    runs-on: ubuntu-latest
    container:
      image: daunnc/pdal-ubuntu:2.3.0
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.8

      - name: Check formatting
        run: sbt scalafmtCheckAll

      - name: Build project
        run: sbt +test

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.8

      - name: Cache Homebrew
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-homebrew

      - name: Install PDAL
        run: |
          brew update && \
          brew install pdal || true

      - name: Check formatting
        run: sbt scalafmtCheckAll

      - name: Build project
        run: sbt +test

      - uses: actions/upload-artifact@v2
        with:
          name: macos
          path: native/target/native/x86_64-darwin/bin

  publish:
    runs-on: ubuntu-latest
    needs: [linux, macos]
    container:
      image: daunnc/pdal-ubuntu:2.3.0
    if: github.event_name != 'pull_request'
    env: 
      PDAL_DEPEND_ON_NATIVE: "false"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v11
        with:
          java-version: adopt@1.8

      - uses: actions/download-artifact@v2
        with:
          name: macos
          path: native/target/native/x86_64-darwin/bin

      - name: Release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        if: ${{ env.SONATYPE_PASSWORD != '' && env.SONATYPE_USERNAME != '' }}
